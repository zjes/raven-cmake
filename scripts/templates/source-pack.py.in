import os
from datetime import datetime
import tarfile
import fnmatch

PKG_NAME          = "@PKG_NAME@"
PKG_FILENAME      = "@CPACK_PACKAGE_FILE_NAME@"
PKG_VERSION       = "@FULL_PROJECT_VERSION@"
PKG_MAINTAINER    = "@CPACK_PACKAGE_CONTACT@"
PKG_BUILD_DEPENDS = "@PKG_BUILD_DEPENDS@".replace(";", ", ")
PKG_ARCH          = "@CPACK_DEBIAN_PACKAGE_ARCHITECTURE@"
PKG_SOURCE_PATH   = "@CMAKE_CURRENT_SOURCE_DIR@"

def changelog():
    dateStr = datetime.now().strftime("%a, %d %b %Y %H:%M:%S +0000")
    log = (
        f"{PKG_NAME} ({PKG_VERSION}) UNRELEASED; urgency=low\n\n"
        f"  * packaging\n\n"
        f" -- {PKG_MAINTAINER}  {dateStr}"
    )
    with open("debian/changelog", "w") as out:
        out.write(log)

def rules():
    rules = (
        "#!/usr/bin/make -f\n"
        "\n"
        "%:\n"
        "       $(info *** dh $(@) ***)\n"
        "       dh $(@) --buildsystem=cmake"
    )
    with open("debian/rules", "w") as out:
        out.write(rules)

def createControl():
    control = (
        f"Format: 1.0\n"
        f"Source: {PKG_NAME}\n"
        f"Architecture: {PKG_ARCH}\n"
        f"Version: {PKG_VERSION}\n"
        f"Maintainer: {PKG_MAINTAINER}\n"
        f"Standards-Version: {PKG_VERSION}\n"
        f"Build-Depends: {PKG_BUILD_DEPENDS}\n"
    )

    with open("debian/control", "w") as out:
        out.write(control)

def filterFnc(info):
    print(os.path.basename(info.name))
    base = os.path.basename(info.name)
    if fnmatch.fnmatch(base, "CMakeLists.txt.*") or base.startswith(".git"):
        print("skip")
        return None
    else:
        return info

def pack():
    with tarfile.open(PKG_NAME+".tar.gz", "w:gz") as tar:
        tar.add(PKG_SOURCE_PATH, filter=filterFnc)

if __name__ == "__main__":
    changelog()
    rules()
    createControl()
    pack()
