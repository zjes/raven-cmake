macro(set_default component)
    set(ravenComponent "raven_component_${component}")

    if(CPACK_GENERATOR STREQUAL "DEB")
        get_target_property(depends ${ravenComponent} "PKG_DEPENDS")
        if(depends)
            string(REPLACE ";" ", " CPACK_DEBIAN_PACKAGE_DEPENDS "${depends}")
        endif()

        get_target_property(replaces ${ravenComponent} "PKG_REPLACES")
        if(replaces)
            string(REPLACE ";" ", " CPACK_DEBIAN_PACKAGE_REPLACES "${replaces}")
        endif()

        get_target_property(provides ${ravenComponent} "PKG_PROVIDES")
        if(provides)
            string(REPLACE ";" ", " CPACK_DEBIAN_PACKAGE_PROVIDES "${provides}")
        endif()

        get_target_property(breaks ${ravenComponent} "PKG_BREAKS")
        if(breaks)
            string(REPLACE ";" ", " CPACK_DEBIAN_PACKAGE_BREAKS "${breaks}")
        endif()

        get_target_property(conflicts ${ravenComponent} "PKG_CONFLICTS")
        if(conflicts)
            string(REPLACE ";" ", " CPACK_DEBIAN_PACKAGE_CONFLICTS "${conflicts}")
        endif()

        get_target_property(preinst ${ravenComponent} "PKG_PREINST")
        if(preinst)
            list(APPEND CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${preinst})
        endif()

        get_target_property(postinst ${ravenComponent} "PKG_POSTINST")
        if(postinst)
            list(APPEND CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${postinst})
        endif()

        get_target_property(prerm ${ravenComponent} "PKG_PRERM")
        if(prerm)
            list(APPEND CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${prerm})
        endif()

        get_target_property(postrm ${ravenComponent} "PKG_POSTRM")
        if(postrm)
            list(APPEND CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${postrm})
        endif()

        get_target_property(templates ${ravenComponent} "PKG_TEMPLATES")
        if(templates)
            list(APPEND CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${templates})
        endif()

        get_target_property(oconf ${ravenComponent} "PKG_CONFFILES")
        if(oconf)
            string(REPLACE ";" "\n" oconf "${oconf}")
            file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/${component})
            file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${component}/conffiles ${oconf}\n)
            list(APPEND CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${oconf})
        endif()
    endif()
endmacro()
